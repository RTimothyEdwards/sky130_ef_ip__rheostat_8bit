Analog IP design example: 8-bit Rheostat in sky130

The design assumes that the tap on the rheostat goes to a high-impedance
node and does not draw any appreciable current.  Therefore the design is
equivalent to an 8-bit resistive DAC, with an unbuffered output.

Requires the CACE system to run testbenches:

	https://github.com/efabless/cace

Schematics for the rheostat are done in xschem and can be found in the xschem/
directory.  Layouts for the rheostat are done in magic and can be found
in the mag/ directory.

The CACE specification is in cace/sky130_ef_ip__rheostat_8bit.txt.  Testbench
schematics are in the cace/ directory.  Note that testbenches are editable in
xschem, and netlists can be generated, but netlists contain variables that
must be substituted by CACE and cannot simulate prior to variable substitution
by CACE.

To run cace in GUI mode:

	/path/to/cace_gui.py cace/sky130_ef_ip__rheostat_8bit.txt

CACE can also be run from the command line as:

	/path/to/cace.py cace/sky130_ef_ip__rheostat_8bit.txt \
		cace/sky130_ef_ip__rheostat_8bit_out.txt \
		-source=schematic \
		-param=<parameter_name> -summary"

Prerequisite design tools:

	xschem:  https://github.com/stefanschippers/xschem
	ngspice: git://git.code.sf.net/p/ngspice/ngspice
	magic:	 https://github.com/RTimothyEdwards/magic
	CACE:	 https://github.com/efabless/cace

